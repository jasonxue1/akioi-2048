name: Build wheels & publish to PyPI
on:
  push:
    tags: ["v*"]          # 仅当推送 vX.Y.Z 标签时触发
  workflow_dispatch:      # 允许手动触发

permissions:
  contents: read          # 只读即可
  id-token: write         # OIDC（pypi-token）需要

jobs:
  build-and-publish:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # maturin-action 会自动准备好 Rust、Python 解释器和 manylinux 交叉编译环境
      - name: Build & upload wheels
        id: maturin
        uses: PyO3/maturin-action@v1
        with:
          command: publish               # 一步到位：构建 + 上传
          # Linux 上传 sdist，其余平台禁用以防重复
          args: >-
            --interpreter 3.8 3.9 3.10 3.11 3.12
            ${{ (matrix.os == 'ubuntu-latest') && '--skip-existing' || '--skip-existing --no-sdist' }}
          manylinux: 2014                # 建议固定 glibc 最小版本
          pypi-token: ${{ secrets.PYPI_API_TOKEN }}

      # 可选：构建结束后把生成的 wheel 作为工作流产物保存（调试用）
      - name: Upload wheels as artifact
        if: ${{ steps.maturin.outcome == 'success' }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: target/wheels/*.whl
