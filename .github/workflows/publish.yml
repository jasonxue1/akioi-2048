name: Build wheels & publish

on:
  push:
    tags: ["v*"]           # publish only on version tags
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # ---------------- caches ----------------
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}

    # ---------------- tooling ----------------
    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Install build tools
      run: |
        python -m pip install -U pip
        # cibuildwheel 2.20+ has CPython 3.13 baked in
        pip install "cibuildwheel>=2.20" maturin build

    # Make sure Cargo.lock uses the new PyO3
    - name: Force-update PyO3 in lock-file
      run: cargo update -p pyo3 --aggressive

    # ---------------- wheels ----------------
    - name: Build wheels
      run: python -m cibuildwheel --output-dir dist
      env:
        CIBW_SKIP: "pp*"                        # skip PyPy
        CIBW_BEFORE_ALL_LINUX: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
        CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

    # ---------------- sdist -----------------
    - name: Build sdist
      run: python -m build --sdist --outdir dist

    - uses: actions/upload-artifact@v4
      with: { name: dist, path: dist/* }

    # ---------------- publish ----------------
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist
        skip_existing: true
